from abc import ABC, abstractmethod

class Exchange(ABC):
    @abstractmethod
    def last_price(self, symbol: str) -> float: ...
    @abstractmethod
    def place_market_order(self, symbol: str, side: str, qty: float): ...
    @abstractmethod
    def place_limit_order(self, symbol: str, side: str, qty: float, price: float): ...
    @abstractmethod
    def cancel_order(self, order_id: str, symbol: str): ...
    @abstractmethod
    def get_open_orders(self, symbol: str): ...
